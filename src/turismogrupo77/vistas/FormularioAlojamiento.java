/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package turismogrupo77.vistas;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import turismogrupo77.accesoADatos.AlojamientoData;
import turismogrupo77.accesoADatos.CiudadData;
import turismogrupo77.accesoADatos.PasajeData;
import turismogrupo77.entidades.Alojamiento;
import turismogrupo77.entidades.Ciudad;
import turismogrupo77.entidades.Pasaje;

/**
 *
 * @author Matias
 */
public class FormularioAlojamiento extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormularioAlojamiento
     */
    private DefaultTableModel modelo;

    public FormularioAlojamiento() {
        initComponents();
        modelo = new DefaultTableModel();
        armarCabeceraTabla();
    }

    private void armarCabeceraTabla() {
        ArrayList<Object> filaCabecera = new ArrayList<>();
        filaCabecera.add("ID Alojamiento");
        filaCabecera.add("Nombre");
        filaCabecera.add("Tipo");
        filaCabecera.add("Importe");

        for (Object it : filaCabecera) {
            modelo.addColumn(it);
        }
        jTAlojamientos.setModel(modelo);
    }

    private void borrarTabla() {
        int indice = modelo.getRowCount() - 1;
        for (int i = indice; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }

    private void borrarContenidoFormulario() {
        jTNombre.setText("");
        jTNombre.setEnabled(false);
        jCBoxTipoAlojamiento.setSelectedIndex(0);
        jCBoxTipoAlojamiento.setEnabled(false);
        jTIdAlojamiento.setEnabled(false);
        

        jTextImporteDiario.setText("");
        jTextImporteDiario.setEnabled(false);
        jTDescripcionMenu.setText("");
        jTDescripcionMenu.setEnabled(false);
        jTIdAlojamiento.setText("");
        jCBoxServicios.setSelectedItem(0);
        jCBoxServicios.setEnabled(false);

        jREstado.setEnabled(false);
        jREstado.setSelected(false);

        jBGuardar.setEnabled(false);
        jBCancelar.setEnabled(true);
        jBEliminar.setEnabled(false);
        jBModificar.setEnabled(false);
        jBNuevo.setEnabled(true);
        borrarTabla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDayChooser1 = new com.toedter.calendar.JDayChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jBGuardar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jCBoxServicios = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jBEliminar = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jBSalir = new javax.swing.JButton();
        jBModificar = new javax.swing.JButton();
        jTextImporteDiario = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jBBuscar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jREstado = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jTCiudadDest = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTNombre = new javax.swing.JTextField();
        jBNuevo = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTDescripcionMenu = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTAlojamientos = new javax.swing.JTable();
        jTIdAlojamiento = new javax.swing.JTextField();
        jCBoxTipoAlojamiento = new javax.swing.JComboBox<>();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        jBGuardar.setText("Guardar");
        jBGuardar.setEnabled(false);
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Gestion Alojamiento");

        jCBoxServicios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Desayuno", "Menu", " " }));
        jCBoxServicios.setEnabled(false);
        jCBoxServicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBoxServiciosActionPerformed(evt);
            }
        });

        jLabel3.setText("Servicios : ");

        jBEliminar.setText("Eliminar");
        jBEliminar.setEnabled(false);
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarActionPerformed(evt);
            }
        });

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jBSalir.setText("Salir");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        jBModificar.setText("Modificar");
        jBModificar.setEnabled(false);
        jBModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBModificarActionPerformed(evt);
            }
        });

        jTextImporteDiario.setEnabled(false);
        jTextImporteDiario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextImporteDiarioActionPerformed(evt);
            }
        });

        jLabel2.setText("Importe Diario :");

        jLabel6.setText("ID :");

        jBBuscar.setText("Buscar");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jLabel8.setText("Disponibilidad :");

        jREstado.setEnabled(false);
        jREstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jREstadoActionPerformed(evt);
            }
        });

        jLabel7.setText("Ciudad Destino :");

        jLabel9.setText("Tipo :");

        jLabel4.setText("Nombre");

        jTNombre.setEnabled(false);

        jBNuevo.setText("Nuevo");
        jBNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNuevoActionPerformed(evt);
            }
        });

        jTDescripcionMenu.setColumns(20);
        jTDescripcionMenu.setRows(5);
        jTDescripcionMenu.setEnabled(false);
        jScrollPane5.setViewportView(jTDescripcionMenu);

        jLabel5.setText("Descripcion:");

        jTAlojamientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Tipo", "Importe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTAlojamientos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTAlojamientosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTAlojamientos);

        jTIdAlojamiento.setEnabled(false);

        jCBoxTipoAlojamiento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hotel", "Hostel", "Departamento" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jBEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextImporteDiario, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jBGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(202, 202, 202)
                                            .addComponent(jLabel1))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addComponent(jTIdAlojamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTCiudadDest, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jBBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jBNuevo))))
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jBSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(35, 35, 35)
                                                .addComponent(jCBoxServicios, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jBModificar))))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jCBoxTipoAlojamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jREstado)))))))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTIdAlojamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTCiudadDest, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jBBuscar)
                                .addComponent(jBNuevo))
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBoxServicios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel8))
                    .addComponent(jREstado, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jCBoxTipoAlojamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextImporteDiario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCancelar)
                    .addComponent(jBGuardar)
                    .addComponent(jBModificar)
                    .addComponent(jBEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBSalir)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
        // TODO add your handling code here:
        CiudadData city = new CiudadData();
        Ciudad ciudadEncontrada = city.buscarCiudad(jTCiudadDest.getText());

        if (ciudadEncontrada != null) {
            AlojamientoData aloj = new AlojamientoData();
            Alojamiento newAloj = new Alojamiento(jTNombre.getText(), jCBoxTipoAlojamiento.getSelectedItem()+"", jCBoxServicios.getSelectedItem()+"",  jTDescripcionMenu.getText(), Double.valueOf(jTextImporteDiario.getText()), ciudadEncontrada, jREstado.isSelected());
            JOptionPane.showMessageDialog(null, newAloj.getTipoAlojamiento());
            aloj.guardarAlojamiento(newAloj);
            borrarContenidoFormulario();
        } else {
            JOptionPane.showMessageDialog(null, "No Existe una ciudad con el nombre " + jTCiudadDest.getText());
        }


    }//GEN-LAST:event_jBGuardarActionPerformed

    private void jBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBEliminarActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        // TODO add your handling code here:
        borrarContenidoFormulario();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBSalirActionPerformed

    private void jBModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBModificarActionPerformed
        // TODO add your handling code here:
        CiudadData city = new CiudadData();
        Ciudad ciudadEncontrada = city.buscarCiudad(jTCiudadDest.getText());

        if (ciudadEncontrada != null) {
            AlojamientoData aloj = new AlojamientoData();
            Alojamiento newAloj = new Alojamiento((Integer)modelo.getValueAt(jTAlojamientos.getSelectedRow(), 0),jTNombre.getText(), jCBoxTipoAlojamiento.getSelectedItem()+"", jCBoxServicios.getSelectedItem()+"",  jTDescripcionMenu.getText(), Double.valueOf(jTextImporteDiario.getText()), ciudadEncontrada, jREstado.isSelected());
            JOptionPane.showMessageDialog(null, newAloj.getTipoAlojamiento());
            aloj.modificarAlojamiento(newAloj);
            JOptionPane.showMessageDialog(null, "Se han modificado Correctamente los Datos del Alojamiento");
            borrarContenidoFormulario();
        } else {
            JOptionPane.showMessageDialog(null, "No Existe una ciudad con el nombre " + jTCiudadDest.getText());
        }
        
    }//GEN-LAST:event_jBModificarActionPerformed

    private void jTextImporteDiarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextImporteDiarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextImporteDiarioActionPerformed

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        // TODO add your handling code here:
        borrarTabla();
        CiudadData city = new CiudadData();
        Alojamiento AlojamientoEncontrado = new Alojamiento();
        AlojamientoData alojData = new AlojamientoData();

        Ciudad ciudadEncontrada = city.buscarCiudad(jTCiudadDest.getText());

        if (ciudadEncontrada != null) {
            int IDCiudad = ciudadEncontrada.getIdCiudad();
            List<Alojamiento> alojamientos = alojData.listarAlojamientosIDciudad(IDCiudad);
            for (Alojamiento a : alojamientos) {
                modelo.addRow(new Object[]{a.getIdAlojamiento(), a.getNombre(), a.getTipoAlojamiento(), a.getImporteDiario()});
            }
        } else {
            JOptionPane.showMessageDialog(null, "No hay una ciudad que se llame " + jTCiudadDest.getText());
            borrarContenidoFormulario();
        }

    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jREstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jREstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jREstadoActionPerformed

    private void jBNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNuevoActionPerformed
        // TODO add your handling code here:
        borrarContenidoFormulario();

        jTNombre.setText("");
        jTNombre.setEnabled(true);
        jCBoxTipoAlojamiento.setSelectedItem(0);
        jCBoxTipoAlojamiento.setEnabled(true);
        jCBoxServicios.setSelectedItem(0);
        jCBoxServicios.setEnabled(true);
        jTextImporteDiario.setText("");
        jTextImporteDiario.setEnabled(true);
        jTDescripcionMenu.setText("");
        jTDescripcionMenu.setEnabled(true);
        jTIdAlojamiento.setText("");

        jREstado.setEnabled(true);

        jREstado.setSelected(true);

        jBGuardar.setEnabled(true);
        jBCancelar.setEnabled(true);
        jBEliminar.setEnabled(false);
        jBModificar.setEnabled(false);
        jBNuevo.setEnabled(true);
        borrarTabla();
    }//GEN-LAST:event_jBNuevoActionPerformed

    private void jTAlojamientosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTAlojamientosMouseClicked
        // TODO add your handling code here:
        Alojamiento aloj = new Alojamiento();
        AlojamientoData alojData = new AlojamientoData();
        
        if (jTAlojamientos.getSelectedRow() != -1) {
            JOptionPane.showMessageDialog(null, modelo.getValueAt(jTAlojamientos.getSelectedRow(), 0));
            aloj = alojData.buscarAlojamiento((Integer)modelo.getValueAt(jTAlojamientos.getSelectedRow(), 0));
            jTNombre.setText(aloj.getNombre());
            jTNombre.setEnabled(true);
            
            
            
            jCBoxTipoAlojamiento.setSelectedItem(aloj.getTipoAlojamiento()+"");
            jCBoxTipoAlojamiento.setEnabled(true);
            
            jCBoxServicios.setSelectedItem(aloj.getServicios()+"");
            jCBoxServicios.setEnabled(true);
            
            jTextImporteDiario.setText(aloj.getImporteDiario()+"");
            jTextImporteDiario.setEnabled(true);
            
            jTDescripcionMenu.setText(aloj.getDescServicios()+"");
            jTDescripcionMenu.setEnabled(true);

            jTIdAlojamiento.setText(aloj.getIdAlojamiento()+"");
            jTIdAlojamiento.setEnabled(false);
            
            jREstado.setSelected(aloj.isEstado());
            jREstado.setEnabled(true);
            
            jBModificar.setEnabled(true);
            
        } else {
            JOptionPane.showMessageDialog(null, "No hay Ninguna Seleccionada");
        }
    }//GEN-LAST:event_jTAlojamientosMouseClicked

    private void jCBoxServiciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBoxServiciosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBoxServiciosActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBEliminar;
    private javax.swing.JButton jBGuardar;
    private javax.swing.JButton jBModificar;
    private javax.swing.JButton jBNuevo;
    private javax.swing.JButton jBSalir;
    private javax.swing.JComboBox<String> jCBoxServicios;
    private javax.swing.JComboBox<String> jCBoxTipoAlojamiento;
    private com.toedter.calendar.JDayChooser jDayChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JRadioButton jREstado;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTAlojamientos;
    private javax.swing.JTextField jTCiudadDest;
    private javax.swing.JTextArea jTDescripcionMenu;
    private javax.swing.JTextField jTIdAlojamiento;
    private javax.swing.JTextField jTNombre;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextImporteDiario;
    // End of variables declaration//GEN-END:variables
}
