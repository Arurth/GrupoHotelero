/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package turismogrupo77.vistas;

import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import turismogrupo77.accesoADatos.AlojamientoData;
import turismogrupo77.accesoADatos.CiudadData;
import turismogrupo77.accesoADatos.PasajeData;
import turismogrupo77.entidades.Alojamiento;
import turismogrupo77.entidades.Ciudad;
import turismogrupo77.entidades.Pasaje;

/**
 *
 * @author Decker Soluciones by Fernando Oliva
 */
public class VistaPaquetes extends javax.swing.JInternalFrame {

    private DefaultTableModel modeloAlojamiento;
    private DefaultTableModel modeloPasaje;

    public VistaPaquetes() {
        initComponents();
        modeloAlojamiento = new DefaultTableModel();
        modeloPasaje = new DefaultTableModel();
        armarCabeceraTablaAlojamiento();
        armarCabeceraTablaPasaje();
    }

    //arma la tabla Pasaje
    private void armarCabeceraTablaPasaje() {
        ArrayList<Object> filaCabecera = new ArrayList<>();
        filaCabecera.add("ID");
        filaCabecera.add("Tipo");
        filaCabecera.add("Importe");

        for (Object it : filaCabecera) {
            modeloPasaje.addColumn(it);
        }
        jTPasaje.setModel(modeloPasaje);
    }

    private void borrarTablaPasaje() {
        int indice = modeloPasaje.getRowCount() - 1;
        for (int i = indice; i >= 0; i--) {
            modeloPasaje.removeRow(i);
        }
    }

    //Arma la Tabla Alojamiento
    private void armarCabeceraTablaAlojamiento() {
        ArrayList<Object> filaCabecera = new ArrayList<>();
        filaCabecera.add("ID");
        filaCabecera.add("Nombre");
        filaCabecera.add("Importe");

        for (Object it : filaCabecera) {
            modeloAlojamiento.addColumn(it);
        }
        jTAlojamiento.setModel(modeloAlojamiento);
    }

    private void borrarTablaAlojamiento() {
        int indice = modeloAlojamiento.getRowCount() - 1;
        for (int i = indice; i >= 0; i--) {
            modeloAlojamiento.removeRow(i);
        }
    }

    private void borrarContenidoFormulario() {
        borrarTablaAlojamiento();
        borrarTablaPasaje();
        jTNombreOrigen.setText("");
        jtNombreDestino.setText("");
        jDInicio.setCalendar(null);
        jDSalida.setCalendar(null);
        jTTemporada.setText("");
        jTCantDias.setText("");
        jTImporteTotal.setText("");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTNombreOrigen = new javax.swing.JTextField();
        jtNombreDestino = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jBConfirmar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTAlojamiento = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTPasaje = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jDInicio = new com.toedter.calendar.JDateChooser();
        jDSalida = new com.toedter.calendar.JDateChooser();
        jTImporteTotal = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTCantDias = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jSCantPersonas = new javax.swing.JSpinner();
        jTTemporada = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Gestion de paquetes");

        jTNombreOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTNombreOrigenActionPerformed(evt);
            }
        });

        jtNombreDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNombreDestinoActionPerformed(evt);
            }
        });

        jLabel2.setText("Ingrese ciudad de origen : ");

        jLabel3.setText("Ingrese ciudad de destino :");

        jBConfirmar.setText("Confirmar");
        jBConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConfirmarActionPerformed(evt);
            }
        });

        jTAlojamiento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre", "Tipo", "Importe Diario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTAlojamiento);

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel6.setText("Alojamientos Disponibles");

        jButton5.setText("Buscar Pasajes y Alojamientos Disponibles");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel7.setText("Pasajes Disponibles");

        jTPasaje.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Tipo", "Importe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTPasaje);

        jLabel8.setText("Fecha Inicio:");

        jLabel9.setText("Fecha Salida:");

        jTImporteTotal.setEnabled(false);

        jLabel11.setText("Total de DÃ­as:");

        jTCantDias.setEnabled(false);

        jLabel4.setText("Cantidad de Personas:");

        jSCantPersonas.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jSCantPersonas.setValue(1);

        jTTemporada.setEnabled(false);

        jLabel5.setText("Temporada:");

        jButton4.setText("Calcular Importe Total");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jSCantPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTNombreOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtNombreDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jBConfirmar)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton3))))
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jDSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel11))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(jDInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel5)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTTemporada, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(jButton4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTImporteTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTCantDias, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(336, 336, 336)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addComponent(jButton5)))
                .addContainerGap(462, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTNombreOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jtNombreDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton5)
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addComponent(jLabel8))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jTTemporada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5)
                                            .addComponent(jButton4)
                                            .addComponent(jTImporteTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(jDInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jTCantDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)))
                    .addComponent(jDSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jSCantPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBConfirmar)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(119, 119, 119))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTNombreOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTNombreOrigenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTNombreOrigenActionPerformed

    private void jtNombreDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNombreDestinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtNombreDestinoActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jBConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConfirmarActionPerformed
        // TODO add your handling code here:
        if (!jTImporteTotal.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe Completar Todos los Datos para Confirmar");
            return;
        } else {
            jBConfirmar.setEnabled(true);
            JOptionPane.showMessageDialog(null, "Se GrabÃ³ el Paquete");
            borrarContenidoFormulario();
        }


    }//GEN-LAST:event_jBConfirmarActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // Busca la ciudad de Origen y Completa la Tabla Pasajes con lo Disponible
        // TODO add your handling code here:
        borrarTablaAlojamiento();
        borrarTablaPasaje();
        Ciudad ciudadOrigen = new Ciudad();
        Ciudad ciudadDestino = new Ciudad();
        CiudadData city = new CiudadData();
        Pasaje pasajeEncontrado = new Pasaje();
        PasajeData pass = new PasajeData();
        Alojamiento alojamientiEncontrado = new Alojamiento();
        AlojamientoData aloj = new AlojamientoData();

        ciudadOrigen = city.buscarCiudad(jTNombreOrigen.getText());
        ciudadDestino = city.buscarCiudad(jtNombreDestino.getText());

        if (ciudadOrigen != null && ciudadDestino != null) {

            //JOptionPane.showMessageDialog(rootPane, "Se ha encontrado una Ciudad Origen con el nombre " + jTNombreOrigen.getText());

            /*this.ciudad = ciudadOrigen;
            jTNombre.setEnabled(true);
            jCProvincia.setEnabled(true);
            jREstado.setEnabled(true);
            jBEliminar.setEnabled(true);
            jBModificar.setEnabled(true);
            jBGuardar.setEnabled(false);
            jTPais.setEnabled(true);*/
            //busca los pasajes con ese ID de ciudad de origen y destino
            List<Pasaje> pasajes = pass.listarPasajesOrigenDestino(ciudadOrigen.getIdCiudad(), ciudadDestino.getIdCiudad());

            for (Pasaje p : pasajes) {
                modeloPasaje.addRow(new Object[]{p.getIdPasaje(), p.getTipoTransporte(), p.getImporte()});
            }

            List<Alojamiento> alojamientos = aloj.listarAlojamientosIDciudad(ciudadDestino.getIdCiudad());

            for (Alojamiento a : alojamientos) {
                modeloAlojamiento.addRow(new Object[]{a.getIdAlojamiento(), a.getNombre(), a.getImporteDiario()});
            }

        } else {
            JOptionPane.showMessageDialog(null, "No hay un Pasaje Disponible con esa combinacion de Origen y Destino ");
            borrarContenidoFormulario();
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        double importeAlojamiento;
        double importePasaje;

        if (jDInicio.getDate() == null && jDSalida.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Debe Completar Ambos Campos Fecha de Inicio");
            return;
        }
        // Calcula el Importe Total del Paquete

        //calcular si es temporada alta, media, o baja
        LocalDate fechaI = jDInicio.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        DateTimeFormatter dti = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        //jLfecha.setText("Fecha: "+fechaN.format(dtf));
        LocalDate fechaF = jDSalida.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");

        if (fechaI.isAfter(fechaF)) {
            JOptionPane.showMessageDialog(null, "La Fecha de Inicio no puede ser posterior a la de Salida");
            return;
        } else {
            //calcula los dias de alojamiento
            if (fechaI.getMonthValue() == 1 || fechaI.getMonthValue() == 7) {
                jTTemporada.setText("Alta");
            } else if (fechaI.getMonthValue() == 2 || fechaI.getMonthValue() == 6) {
                jTTemporada.setText("Media");
            } else {
                jTTemporada.setText("Baja");
            }

            long totaldias = ChronoUnit.DAYS.between(fechaI, fechaF);
            jTCantDias.setText(totaldias + "");
        }

        if (jTAlojamiento.getSelectedRow() != -1 && jTPasaje.getSelectedRow() != -1) {
            importeAlojamiento = (Double) modeloAlojamiento.getValueAt(jTAlojamiento.getSelectedRow(), 2);
            importePasaje = (Double) modeloPasaje.getValueAt(jTPasaje.getSelectedRow(), 2);
            //calculo usando los dÃ­as y cantidad de Personas en Temporada Baja:
            double importeTotalBaja = ((importeAlojamiento * Double.valueOf(jTCantDias.getText())) * (Integer) jSCantPersonas.getValue() + (importePasaje * (Integer) jSCantPersonas.getValue()));
            //se Agrega o no el porcentaje que corresponderÃ­a si es Temporada Alta:
            double importeTotalAlta = importeTotalBaja * 1.3;
            //se Agrega o no el porcentaje que corresponderÃ­a si es Temporada Media:
            double importeTotalMedia = importeTotalBaja * 1.15;
        } else {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar Pasaje y Alojamiento");
            return;
        }

        //calculo usando los dÃ­as y cantidad de Personas en Temporada Baja:
        double importeTotalBaja = ((importeAlojamiento * Double.valueOf(jTCantDias.getText())) * (Integer) jSCantPersonas.getValue() + (importePasaje * (Integer) jSCantPersonas.getValue()));
        //se Agrega o no el porcentaje que corresponderÃ­a si es Temporada Alta:
        double importeTotalAlta = importeTotalBaja * 1.3;
        //se Agrega o no el porcentaje que corresponderÃ­a si es Temporada Media:
        double importeTotalMedia = importeTotalBaja * 1.15;

        if (jTTemporada.getText().equals("Alta")) {
            jTImporteTotal.setText(importeTotalAlta + "");
        } else if (jTTemporada.getText().equals("Media")) {
            jTImporteTotal.setText(importeTotalMedia + "");
        } else {
            jTImporteTotal.setText(importeTotalBaja + "");
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        borrarContenidoFormulario();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBConfirmar;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private com.toedter.calendar.JDateChooser jDInicio;
    private com.toedter.calendar.JDateChooser jDSalida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSpinner jSCantPersonas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTAlojamiento;
    private javax.swing.JTextField jTCantDias;
    private javax.swing.JTextField jTImporteTotal;
    private javax.swing.JTextField jTNombreOrigen;
    private javax.swing.JTable jTPasaje;
    private javax.swing.JTextField jTTemporada;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jtNombreDestino;
    // End of variables declaration//GEN-END:variables
}
